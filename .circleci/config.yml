version: 2.1
executors:
  ebs:
    docker:
      - image: larrykirschner/circleci-elasticbeanstalk:e9f1c61a9c863a520f88172e076615966a12f383
aliases:
  # setup env vars for ebs tools
  - &dev-mentorpal-env-init
    name: dev-mentorpal env init
    command: eval $EBS_TOOLS_ENV_INIT && echo 'export EB_ENV=dev-mentorpal' >> $BASH_ENV
  - &qa-mentorpal-env-init
    name: qa-mentorpal env init
    command: eval $EBS_TOOLS_ENV_INIT && echo 'export EB_ENV=qa-mentorpal' >> $BASH_ENV
  - &prod-mentorpal-env-init
    name: qa-mentorpal env init
    command: eval $EBS_TOOLS_ENV_INIT && echo 'export EB_ENV=prod-mentorpal' >> $BASH_ENV
  - &docker-build
    name: Docker Build
    command: cd ${EBS_TOOLS} && make docker-build
  - &docker-push
    name: Docker Push
    command: cd ${EBS_TOOLS} && make docker-push
  - &eb-deploy
    name: EBS Deploy
    command: cd ${EBS_TOOLS} && make clean eb-deploy
  - &only-master
    branches:
      only:
        - master
  - &only-prod-releases
    tags:
      only: /v[0-9]+(\.[0-9]+)*(-prod)/
    branches:
      ignore: /.*/
jobs:
  format-and-lint-python:
    docker:
      - image: circleci/python:3.7.3
    steps:
      - checkout
      - run:
          name: Test format for python
          command: make test-format-python
      - run:
          name: Lint python
          command: make lint-python
  client-test:
    docker:
      - image: circleci/node:12.4
    steps:
      - checkout
      - run:
          name: Check format
          command: make test-format-js
      - run: 
          name: Install client
          command: cd client && npm install
      - run:
          name: Audit js
          command: make audit-js
      - run:
          name: Lint client
          command:
            cd client && npm run test:lint
      - run:
          name: Test client
          command:
            cd client && npm run test
  reports-test:
    docker:
      - image: circleci/node:12.4
    steps:
      - checkout
      - run:
          name: Test reports
          command: |
            cd reports
            npm install 
            npm test
  docker-build-test-push:
    executor: ebs
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run: *qa-mentorpal-env-init
      - run: *docker-build
      - run:
          name: Test Images
          command: make test-images
      - run: *docker-push
  dev-ebs-deploy:
    executor: ebs
    steps:
      - checkout
      - run: *dev-mentorpal-env-init
      - run: *eb-deploy
  qa-ebs-deploy:
    executor: ebs
    steps:
      - checkout
      - run: *qa-mentorpal-env-init
      - run: *eb-deploy
  prod-ebs-deploy:
    executor: ebs
    steps:
      - checkout
      - run: *prod-mentorpal-env-init
      - run: *eb-deploy
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - format-and-lint-python
      - client-test
      - reports-test
      - docker-build-test-push:
          requires:
            - format-and-lint-python
            - client-test
      - deploy-to-dev:
          type: approval
          requires:
            - docker-build-test-push
      - dev-ebs-deploy:
          requires:
            - deploy-to-dev
      - qa-ebs-deploy:
          filters: *only-master
          requires:
            - docker-build-test-push
      - prod-ebs-deploy:
          filters: *only-prod-releases
          requires:
            - docker-build-test-push
