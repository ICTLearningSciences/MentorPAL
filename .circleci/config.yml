version: 2.1
executors:
  ebs:
    docker:
      - image: larrykirschner/circleci-elasticbeanstalk:1.1.0
  node:
    docker:
      - image: circleci/node:12.18.1
  python:
    docker:
      - image: circleci/python:3.6.9
  tests-dockerized:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
aliases:
  - &only-main
    branches:
      only:
        - main
  - &only-main-releases
    tags:
      only: /v[0-9]+(\.[0-9]+)/
    branches:
      only: main
  - &only-untagged
    tags:
      ignore: /.*/
commands:
  git-lfs-install:
    steps:
      - run:
          name: Git lfs install
          command: |
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash \
              && sudo apt-get install -y git-lfs \
              && git lfs install
  checkout-with-lfs:
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - git-lfs-install
      - checkout
      - run: git lfs pull
  checkout-and-cache:
    steps:
      - checkout-with-lfs
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
  mentorpal-env-init:
    parameters:
      eb_env:
        type: string
    steps:
      - run:
          name: mentorpal env init - << parameters.eb_env >> 
          command: eval $EBS_TOOLS_ENV_INIT && echo 'export EB_ENV=<< parameters.eb_env >>' >> $BASH_ENV
  eb-deploy:
    parameters:
      eb_env:
        type: string
      video_host:
        type: string
      video_url:
        type: string
    steps:
      - checkout-with-lfs
      - mentorpal-env-init:
          eb_env: << parameters.eb_env >>
      - run:
          name: EBS Deploy
          # TODO: now hardcoded with arch 'lstm_v1' and --newest. 
          # This should be made configurable but in a way that is minimally burdonsome/error prone
          command: |
            cd ${EBS_TOOLS} \
              && make clean build \
              && mkdir -p build/ebs/bundle/mentor-api/checkpoint \
              && pip install --user -e git+https://github.com/ICTLearningSciences/mentor-classifier.git@1.0.1#egg=mentor_classifier \
              && mentor_classifier_copy_models \
                --newest \
                --arch lstm_v1 \
                --from ~/project/checkpoint/classifiers \
                --to build/ebs/bundle/mentor-api/checkpoint/classifiers \
              && cp -r ~/project/checkpoint/vector_models build/ebs/bundle/mentor-api/checkpoint/vector_models \
              && cp -r ~/project/mentors/data/mentors build/ebs/bundle/mentor-api/mentors \
              && echo "MENTOR_VIDEO_HOST=<< parameters.video_host >>" >> build/ebs/bundle/mentor-api/.env \
              && mkdir -p build/ebs/bundle/mentor-client \
              && echo "MENTOR_VIDEO_URL=<< parameters.video_url >>" >> build/ebs/bundle/mentor-client/.env \
              && make eb-deploy
  videos-sync-buckets:
    parameters:
      bucket_src:
        type: string
      bucket_dst:
        type: string
    steps:
      - checkout
      - run:
          name: sync << parameters.bucket_src >> to << parameters.bucket_dst >>
          command: |
            cd mentors \
              && VIDEO_SYNC_SRC=<< parameters.bucket_src >> \
                VIDEO_SYNC_DST=<< parameters.bucket_dst >> \
                make video-sync

jobs:
  checkout-revision-setup:
    executor: python
    steps:
      - checkout-and-cache
  dev-ebs-deploy:
    executor: ebs
    steps:
      - eb-deploy:
          eb_env: dev-mentorpal
          video_host: https://dev-video.mentorpal.org
          video_url: https://dev-video.mentorpal.org/videos
  qa-ebs-deploy:
    executor: ebs
    steps:
      - eb-deploy:
          eb_env: qa-mentorpal
          video_host: https://qa-video.mentorpal.org
          video_url: https://qa-video.mentorpal.org/videos
  prod-ebs-deploy:
    executor: ebs
    steps:
      - eb-deploy:
          eb_env: prod-mentorpal
          video_host: https://video.mentorpal.org
          video_url: https://video.mentorpal.org/videos
  videos-sync-dev2qa:
    executor: python
    steps:
      - videos-sync-buckets:
          bucket_src: s3://dev-video.mentorpal.org/videos
          bucket_dst: s3://qa-video.mentorpal.org/videos
  videos-sync-qa2dev:
    executor: python
    steps:
      - videos-sync-buckets:
          bucket_src: s3://qa-video.mentorpal.org/videos
          bucket_dst: s3://dev-video.mentorpal.org/videos
  videos-sync-qa2prod:
    executor: python
    steps:
      - videos-sync-buckets:
          bucket_src: s3://qa-video.mentorpal.org/videos
          bucket_dst: s3://video.mentorpal.org/videos
  test:
    executor: tests-dockerized
    steps:
      - checkout-with-lfs
      - run:
          name: "Set Python Version"
          command: pyenv global 3.7.0
      - run: make test
  test-license:
    executor: node
    steps:
      - checkout
      - run:
          name: License js
          command: npm ci && npm run test:license
workflows:
  version: 2
  test-and-deploy-commit:
    jobs:
      - checkout-revision-setup:
          filters: *only-untagged
      - test-license:
          filters: *only-untagged
          requires:
            - checkout-revision-setup
      - test:
          filters: *only-untagged
          requires:
            - checkout-revision-setup
      - approve-deploy-dev:
          type: approval
          filters: *only-untagged
          requires:
            - test
            - test-license
      - dev-ebs-deploy:
          filters: *only-untagged
          requires:
            - approve-deploy-dev
      - approve-video-sync-dev2qa:
          type: approval
          filters: *only-untagged
      - videos-sync-dev2qa:
          filters: *only-untagged
          requires:
            - approve-video-sync-dev2qa
      - approve-video-sync-qa2dev:
          type: approval
          filters: *only-untagged
      - videos-sync-qa2dev:
          filters: *only-untagged
          requires:
            - approve-video-sync-qa2dev
  test-and-deploy-main:
    jobs:
      - checkout-revision-setup:
          filters: *only-main
      - test-license:
          filters: *only-main
          requires:
            - checkout-revision-setup
      - test:
          filters: *only-main
          requires:
            - checkout-revision-setup
      - approve-deploy-qa:
          type: approval
          filters: *only-main
          requires:
            - test
            - test-license
      - qa-ebs-deploy:
          filters: *only-main
          requires:
            - approve-deploy-qa
      - videos-sync-dev2qa:
          filters: *only-main
          requires:
            - approve-deploy-qa
  test-and-deploy-release:
    jobs:
      - checkout-revision-setup:
          filters: *only-main-releases
      - test-license:
          filters: *only-main-releases
          requires:
            - checkout-revision-setup
      - test:
          filters: *only-main-releases
          requires:
            - checkout-revision-setup
      - approve-deploy-prod:
          type: approval
          filters: *only-main-releases
          requires:
            - test
            - test-license
      - prod-ebs-deploy:
          filters: *only-main-releases
          requires:
            - approve-deploy-prod
      - videos-sync-qa2prod:
          filters: *only-main-releases
          requires:
            - approve-deploy-prod
