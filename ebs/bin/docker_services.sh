#!/bin/bash

usage () {
    echo $"
Usage: $0 docker-account 
        [-t docker-tag] 
        [-p docker-image-prefix] 
        [-s services-directory] 
        [-o output-properties] 
    build|push
"
}

cannonical () {
  local s=$1
  s=$(echo $s | tr [:upper:] [:lower:])
  s=$(echo $s | perl -pe 's/[^a-zA-Z0-9\-\n]+/-/g')
  echo $s
}

ORIGINAL_CALL="$0 $@"
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
EBS=$(dirname $DIR)
ROOT=$(dirname $EBS)
SERVICES_ROOT=${ROOT}/services
BUILD=${EBS}/build
DOCKER_PREFIX=$(cannonical ${ROOT##*/})
DOCKER_TAG=latest
DOCKER_ACCOUNT=$1; shift;
OUTPUT_PROPERTIES=${BUILD}/config/docker_services.properties

if [ -z "$DOCKER_ACCOUNT" ]; then
    usage
    exit 1
fi

while getopts ":t::s:p:o:" opt; do
  case ${opt} in
    t )
      DOCKER_TAG=$OPTARG
      ;;
    s )
      SERVICES_ROOT=$OPTARG
      ;;
    p )
      DOCKER_PREFIX=$OPTARG
      ;;
    o )
      OUTPUT_PROPERTIES=$OPTARG
      ;;
    \? )
      echo "Invalid option: $OPTARG" 1>&2
      ;;
    : )
      echo "Invalid option: $OPTARG requires an argument" 1>&2
      ;;
  esac
done
shift $((OPTIND -1))

CMD=$1; shift;

case "$CMD" in
        build)
            cd $SERVICES_ROOT 
            for d in */; do
                service_name=${d%/}
                img=${DOCKER_ACCOUNT}/${DOCKER_PREFIX}-${service_name}:${DOCKER_TAG}
                cd ${SERVICES_ROOT}/${d} && \
                    make docker-build DOCKER_IMAGE=${img}
            done
            ;;
        
        push)
            cd $SERVICES_ROOT 
            for d in */; do
                service_name=${d%/}
                img=${DOCKER_ACCOUNT}/${DOCKER_PREFIX}-${service_name}:${DOCKER_TAG}
                docker push ${img}
            done
            ;;

        properties)
            cd $SERVICES_ROOT 
            mkdir -p $(dirname ${OUTPUT_PROPERTIES})
            echo "# generated by ${ORIGINAL_CALL}" > ${OUTPUT_PROPERTIES}
            for d in */; do
                service_name=${d%/}
                img=${DOCKER_ACCOUNT}/${DOCKER_PREFIX}-${service_name}
                echo "${service_name}=${img}:${DOCKER_TAG}" >> ${OUTPUT_PROPERTIES}
            done
            echo "" >> ${OUTPUT_PROPERTIES}
            ;;

        *)
            usage
            exit 1
 
esac